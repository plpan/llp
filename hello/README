1. mov 限制
- mov不能讲数据从内存拷贝至内存
- 数据源和数据目标的操作数大小必须相等

2. syscall 指令在*nix系统中进行系统调用。输入输出依赖于设备硬件，但是硬件可被多个程序同时使用，不允许程序员操作操作系统直接使用
- 每一个系统调用都会有一个唯一的编号
	- rax寄存器存储系统调用编号
	- rdi, rsi, rdx, r10, r8, r9依次存储系统调用需要的参数，系统调用最多就是6个参数
	- 最后执行syscall指令

3. write 系统调用接受的参数
- 文件描述符
- buffer首地址
- 需要写入的字节数
-- 注：这里如果写出的长度超过buffer长度，怎么样？垃圾数据！
--     如果是写入呢？存在什么风险吗？

4. 执行
- nasm -felf64 hello.asm -o hello.o
- ld -o hello hello.o
- chmod u+x hello
- ./hello
	- hello, world!
	- Segmentation fault

5. ???为什么段错误了???
- 执行完syscall之后，程序还需继续执行，但是我们的程序并没有给出之后的汇编代码，也就是收后面执行的是垃圾代码！！！
	- 如何解决呢？
	- exit系统调用

6. exit 系统调用
